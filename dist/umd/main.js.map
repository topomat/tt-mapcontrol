{"version":3,"file":"main.js","sources":["../../src/MapControl.ts"],"sourcesContent":["import Map from \"@arcgis/core/Map\";\r\nimport MapView from \"@arcgis/core/views/MapView\";\r\nimport WMTSLayer from \"@arcgis/core/layers/WMTSLayer\";\r\nimport Point from \"@arcgis/core/geometry/Point\";\r\nimport SpatialReference from \"@arcgis/core/geometry/SpatialReference\";\r\nimport TileInfo from \"@arcgis/core/layers/support/TileInfo\";\r\nimport Extent from \"@arcgis/core/geometry/Extent\";\r\n\r\nimport esriConfig from \"@arcgis/core/config\";\r\nesriConfig.assetsPath = \"https://js.arcgis.com/4.22/@arcgis/core/assets\"; // à mettre dans la config\r\n\r\nimport { MapControlParams } from \"./MapControlParams\";\r\nexport type { MapControlParams } from \"./MapControlParams\";\r\n\r\nimport \"@arcgis/core/assets/esri/themes/light/main.css\";\r\n\r\nexport class MapControl {\r\n    private view: MapView;\r\n\r\n    /**\r\n     * @param  {MapControlParams} params\r\n     */\r\n    public constructor(params: MapControlParams) {\r\n        this.build(params);\r\n    }\r\n    /**\r\n     * Centre la carte sur un nouvel emplacement\r\n     * @param  {number} x Coordonnée X du nouveau centre\r\n     * @param  {number} y Coordonnée Y du nouveau centre\r\n     * @param  {number} scale Echelle\r\n     * @returns void\r\n     */\r\n    public center(x: number, y: number, scale?: number): void {\r\n        this.view.center = new Point({\r\n            x,\r\n            y,\r\n            spatialReference: this.view.spatialReference\r\n        });\r\n        if (scale !== undefined) {   \r\n            this.view.scale = scale;\r\n        }\r\n    }\r\n\r\n    private build(params: MapControlParams): void {\r\n        const wmts = new WMTSLayer({\r\n            url: \"https://wmts.asit-asso.ch/wmts/1.0.0/\",\r\n            activeLayer: {\r\n                id: \"asitvd.fond_couleur\"\r\n            }\r\n        });\r\n        const map = new Map({\r\n            layers: [wmts],\r\n        });\r\n        const spatialReference = new SpatialReference({\r\n            wkid: 2056\r\n        });\r\n\r\n        let center: Point;\r\n        if (params.center === undefined){\r\n            center = new Point({\r\n                x: 2530000,\r\n                y: 1160000,\r\n                spatialReference\r\n            });\r\n        } else {\r\n            center = new Point({\r\n                x: params.center[0],\r\n                y: params.center[1],\r\n                spatialReference\r\n            });\r\n        }\r\n        \r\n        // diminuer le nombre de valeurs pour ne pas devoir limiter avec minScale\r\n        const scales = [15118110.236220477, 14173228.346456695, 13228346.456692917, 12283464.566929135, 11338582.677165356, 10393700.787401576, 9448818.897637796, 8503937.007874018, 7559055.118110239, 6614173.228346459, 5669291.338582678, 4724409.448818898, 3779527.5590551193, 2834645.669291339, 2456692.9133858276, 1889763.7795275596, 944881.8897637798, 377952.7559055118, 188976.3779527559, 75590.55118110238, 37795.27559055119, 18897.637795275594, 9448.818897637797, 7559.055118110236, 5669.291338582678, 3779.527559055118, 1889.763779527559, 944.8818897637796, 377.9527559055119, 188.97637795275594];\r\n        const tileInfo = TileInfo.create({\r\n            spatialReference,\r\n            numLODs: scales.length,\r\n            scales\r\n        });\r\n        const extent = new Extent({\r\n            xmin: 2480000,\r\n            ymin: 1110000,\r\n            xmax: 2595000,\r\n            ymax: 1208000,\r\n            spatialReference\r\n        });\r\n        this.view = new MapView({\r\n            container: params.container,\r\n            map,\r\n            scale: params.scale === undefined ? 300000 : params.scale,\r\n            center,\r\n            spatialReference,\r\n            constraints: {\r\n                rotationEnabled: false,\r\n                lods: tileInfo.lods,\r\n                minScale: 1000000,\r\n                geometry: extent\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n"],"names":["Point","WMTSLayer","Map","SpatialReference","TileInfo","Extent","MapView"],"mappings":"85CASW,WAAa,wDAOA,CAMb,YAAY,EAA0B,CALrC,oBAMC,MAAM,GASR,OAAO,EAAW,EAAW,EAAsB,MACjD,KAAK,OAAS,GAAIA,WAAM,CACzB,IACA,IACA,iBAAkB,KAAK,KAAK,mBAE5B,IAAU,cACL,KAAK,MAAQ,GAIlB,MAAM,EAAgC,MACpC,GAAO,GAAIC,WAAU,CACvB,IAAK,wCACL,YAAa,CACT,GAAI,yBAGN,EAAM,GAAIC,WAAI,CAChB,OAAQ,CAAC,KAEP,EAAmB,GAAIC,WAAiB,CAC1C,KAAM,UAGN,GACA,EAAO,SAAW,SACT,GAAIH,WAAM,CACf,EAAG,MACH,EAAG,MACH,uBAGK,GAAIA,WAAM,CACf,EAAG,EAAO,OAAO,GACjB,EAAG,EAAO,OAAO,GACjB,0BAKF,GAAS,CAAC,qBAAoB,qBAAoB,qBAAoB,qBAAoB,qBAAoB,qBAAoB,oBAAmB,oBAAmB,oBAAmB,oBAAmB,oBAAmB,oBAAmB,qBAAoB,oBAAmB,qBAAoB,qBAAoB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,mBAAoB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,kBAAmB,oBAC3jB,EAAWI,UAAS,OAAO,CAC7B,mBACA,QAAS,EAAO,OAChB,WAEE,EAAS,GAAIC,WAAO,CACtB,KAAM,MACN,KAAM,MACN,KAAM,OACN,KAAM,OACN,0BAEC,KAAO,GAAIC,WAAQ,CACpB,UAAW,EAAO,UAClB,MACA,MAAO,EAAO,QAAU,OAAY,IAAS,EAAO,MACpD,SACA,mBACA,YAAa,CACT,gBAAiB,GACjB,KAAM,EAAS,KACf,SAAU,IACV,SAAU"}