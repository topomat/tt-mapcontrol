(function(n,g){typeof exports=="object"&&typeof module<"u"?module.exports=g(require("esri/config"),require("esri/geometry/Extent"),require("esri/geometry/Point"),require("esri/geometry/SpatialReference"),require("esri/Graphic"),require("esri/layers/GraphicsLayer"),require("esri/layers/support/TileInfo"),require("esri/Map"),require("esri/views/MapView"),require("esri/widgets/ScaleBar"),require("esri/geometry/Polyline"),require("esri/geometry/projection"),require("esri/request"),require("esri/Basemap"),require("esri/identity/IdentityManager"),require("esri/layers/FeatureLayer"),require("esri/layers/ImageryLayer"),require("esri/layers/MapImageLayer"),require("esri/layers/TileLayer"),require("esri/layers/VectorTileLayer"),require("esri/layers/WMTSLayer"),require("esri/core/accessorSupport/decorators/property"),require("esri/core/accessorSupport/decorators/subclass"),require("esri/layers/BaseTileLayer"),require("esri/rest/query"),require("esri/symbols/PictureMarkerSymbol"),require("esri/widgets/BasemapGallery"),require("esri/widgets/BasemapGallery/support/LocalBasemapsSource"),require("esri/widgets/CoordinateConversion"),require("esri/widgets/CoordinateConversion/support/Conversion"),require("esri/widgets/CoordinateConversion/support/Format"),require("esri/widgets/Expand"),require("esri/widgets/LayerList"),require("esri/core/accessorSupport/decorators"),require("esri/core/reactiveUtils"),require("esri/widgets/support/widget"),require("esri/widgets/Widget")):typeof define=="function"&&define.amd?define(["esri/config","esri/geometry/Extent","esri/geometry/Point","esri/geometry/SpatialReference","esri/Graphic","esri/layers/GraphicsLayer","esri/layers/support/TileInfo","esri/Map","esri/views/MapView","esri/widgets/ScaleBar","esri/geometry/Polyline","esri/geometry/projection","esri/request","esri/Basemap","esri/identity/IdentityManager","esri/layers/FeatureLayer","esri/layers/ImageryLayer","esri/layers/MapImageLayer","esri/layers/TileLayer","esri/layers/VectorTileLayer","esri/layers/WMTSLayer","esri/core/accessorSupport/decorators/property","esri/core/accessorSupport/decorators/subclass","esri/layers/BaseTileLayer","esri/rest/query","esri/symbols/PictureMarkerSymbol","esri/widgets/BasemapGallery","esri/widgets/BasemapGallery/support/LocalBasemapsSource","esri/widgets/CoordinateConversion","esri/widgets/CoordinateConversion/support/Conversion","esri/widgets/CoordinateConversion/support/Format","esri/widgets/Expand","esri/widgets/LayerList","esri/core/accessorSupport/decorators","esri/core/reactiveUtils","esri/widgets/support/widget","esri/widgets/Widget"],g):(n=typeof globalThis<"u"?globalThis:n||self,n.mapcontrol=g(n["esri/config"],n.esriExtent,n.esriPoint,n.esriSpatialReference,n.esriGraphic,n.esriGraphicsLayer,n.esriTileInfo,n.esriMap,n.esriMapView,n.esriScaleBar,n.esriPolyline,n.esriprojection,n.esriRequest,n.esriBasemap,n.esriId,n.esriFeatureLayer,n.esriImageryLayer,n.esriMapImageLayer,n.esriTileLayer,n.esriVectorTileLayer,n.esriWMTSLayer,n.property,n.subclass,n.BaseTileLayer,n.esriquery,n.esriPictureMarkerSymbol,n.esriBasemapGallery,n.esriLocalBasemapsSource,n.esriCoordinateConversion,n.esriConversion,n.esriFormat,n.esriExpand,n.esriLayerList,n.esridecorators,n.esriReactiveUtils,n.esriwidget,n.esriWidget))})(this,function(n,g,u,C,m,O,L,P,T,k,E,$,f,D,V,_,j,F,R,A,N,z,W,J,K,Q,H,X,Y,Z,ee,w,te,B,re,ie,se){"use strict";function q(c){const e=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(c){for(const t in c)if(t!=="default"){const r=Object.getOwnPropertyDescriptor(c,t);Object.defineProperty(e,t,r.get?r:{enumerable:!0,get:()=>c[t]})}}return e.default=c,Object.freeze(e)}const M=q($),ae=q(K),oe=q(re);let ne=()=>({emit(c,...e){let t=this.events[c]||[];for(let r=0,i=t.length;r<i;r++)t[r](...e)},events:{},on(c,e){var t;return(t=this.events[c])!=null&&t.push(e)||(this.events[c]=[e]),()=>{var r;this.events[c]=(r=this.events[c])==null?void 0:r.filter(i=>e!==i)}}});class ce{static gpxToFeatures(e,t){return new Promise(r=>{f(e,{responseType:"xml"}).then(i=>{const s=i.data;M.load().then(()=>{const a={waypoints:[],tracks:[]};s.querySelectorAll("wpt").forEach((o,l)=>{const p=new u({latitude:o.attributes.lat.value,longitude:o.attributes.lon.value}),h=this.getGraphic(p,o,`waypoint ${l+1}`,t);a.waypoints.push(h)}),s.querySelectorAll("trk").forEach((o,l)=>{const p=new E({paths:[],spatialReference:{wkid:4326}});o.querySelectorAll("trkseg").forEach(y=>{const d=[];y.querySelectorAll("trkpt").forEach(G=>{const we=new u({latitude:G.attributes.lat.value,longitude:G.attributes.lon.value});d.push(we)}),p.addPath(d)});const h=this.getGraphic(p,o,`track ${l+1}`,t);a.tracks.push(h)}),s.querySelectorAll("rte").forEach((o,l)=>{const p=new E({paths:[],spatialReference:{wkid:4326}}),h=[];o.querySelectorAll("rtept").forEach(d=>{const S=new u({latitude:d.attributes.lat.value,longitude:d.attributes.lon.value});h.push(S)}),p.addPath(h);const y=this.getGraphic(p,o,`route ${l+1}`,t);a.tracks.push(y)}),r(a)})})})}static getGraphic(e,t,r,i){const s=t.querySelector("name");let a=r;s&&(a=s.textContent);const o=t.querySelector("desc");let l="";o&&(l=o.textContent);const p={title:a,content:l};return new m({geometry:M.project(e,i),popupTemplate:p})}}var le=Object.defineProperty,pe=Object.getOwnPropertyDescriptor,U=(c,e,t,r)=>{for(var i=r>1?void 0:r?pe(e,t):e,s=c.length-1,a;s>=0;s--)(a=c[s])&&(i=(r?a(e,t,i):a(i))||i);return r&&i&&le(e,t,i),i};let v=class extends J{constructor(c){super();const e=new C({wkid:2056}),t=L.create({spatialReference:e,numLODs:c.scales.length,scales:c.scales});t.origin=new u({x:242e4,y:135e4,spatialReference:e}),this.title=c.title,this.urlTemplate=c.urlTemplate,this.spatialReference=e,this.tileInfo=t}getTileUrl(c,e,t){return this.urlTemplate.replace("{level}",c.toString()).replace("{col}",t.toString()).replace("{row}",e.toString())}};U([z.property()],v.prototype,"urlTemplate",2),v=U([W.subclass("esri.layers.SwissTileLayer")],v);class he{constructor(e){this.serviceDescription=null,this.config=e,this.serviceUrl=e.vectorServiceUrl;const t=e.vectorServiceToken;V.registerToken({token:t,server:`${this.serviceUrl.split("/rest/services")[0]}/rest/services`})}getFeatureLayers(e){return new Promise(t=>{this.getServiceDescription().then(r=>{const i=[];r.layers.forEach(s=>{if(e.includes(s.name)){const a=new _({url:`${this.serviceUrl}/${s.id}`,title:s.name});a.on("layerview-create",o=>{const l=o.layerView.layer;l.popupTemplate=l.createPopupTemplate()}),i.push(a)}}),t(i)})})}async getMapImageLayers(e){const t=[];return(await this.getServiceDescription()).layers.forEach(i=>{if(e.includes(i.name)){const s=new F({title:i.name,url:this.serviceUrl,listMode:"hide-children",sublayers:[{id:i.id,visible:!0}]}),a=s.sublayers.at(0);a.load().then(()=>{a.popupEnabled=!0,a.popupTemplate=a.createPopupTemplate(),a.popupTemplate.title=`${i.name}: {${a.sourceJSON.displayField}}`}),t.push(s)}}),t}queryLayer(e,t){return new Promise(r=>{this.getServiceDescription().then(i=>{const s=i.layers.filter(a=>a.name===e.layer)[0];if(!s){console.warn(`Invalid layer name in config file: ${e.layer}`),r([]);return}ae.executeQueryJSON(`${this.serviceUrl}/${s.id}`,{where:`${e.field} in ('${t.join("','")}')`,returnGeometry:!0}).then(a=>{r(a.features.map(o=>o.geometry))})})})}getBasemaps(e){const t=[];return e.forEach(r=>{const i=this.getLayer(r);i&&t.push(new D({baseLayers:[i],title:r.alias,thumbnailUrl:r.thumbnailUrl}))}),t}getServiceDescription(){return new Promise(e=>{this.serviceDescription===null?f(this.serviceUrl,{query:{f:"json"},responseType:"json"}).then(t=>{this.serviceDescription=t.data,e(this.serviceDescription)}):e(this.serviceDescription)})}getLayer(e){switch(e.type){case"tile":return new v({title:e.alias,urlTemplate:e.urlTemplate,scales:this.config.scales});case"wmts":return new N({url:e.url,activeLayer:{id:e.layerId},copyright:e.copyright});case"mapservice":return new R({url:e.url,copyright:e.copyright});case"imageservice":return new j({url:e.url,copyright:e.copyright});case"vectortile":return new A({url:e.url});default:return console.warn(`Unsupported basemap type: ${e.type}`),null}}}class ue{static txtToFeatures(e,t){return new Promise(r=>{f(e,{responseType:"text"}).then(i=>{const s=[];i.data.split(`
`).forEach((a,o)=>{if(o){const l=a.split("	");if(l.length>=5){const p=l[0].split(","),h=new u({x:parseFloat(p[1]),y:parseFloat(p[0]),spatialReference:t}),y={title:l[1],content:l[2]},d=l[4].split(","),S=new Q({url:l[3],width:`${d[0]}px`,height:`${d[1]}px`});s.push(new m({geometry:h,symbol:S,popupTemplate:y}))}}}),r(s)})})}}var ye=Object.defineProperty,de=Object.getOwnPropertyDescriptor,I=(c,e,t,r)=>{for(var i=r>1?void 0:r?de(e,t):e,s=c.length-1,a;s>=0;s--)(a=c[s])&&(i=(r?a(e,t,i):a(i))||i);return r&&i&&ye(e,t,i),i};let x=class extends se{constructor(c){super(c)}postInitialize(){oe.watch(()=>[this.mainView.center,this.mainView.interacting,this.mainView.scale],()=>{this.onViewChange()})}render(){return setTimeout(()=>{this.expand.expanded&&this.onViewChange()},10),ie.tsx("div",{id:`${this.id}_cont`,style:"width:250px;height:150px;background:#fff"})}onViewChange(){this.expand.expanded&&(!this.overview&&document.getElementById(`${this.id}_cont`)&&(this.createMap(),this.createExtentGraphic()),this.overview&&(this.overview.center=this.mainView.center,this.overview.scale=this.mainView.scale*this.factor,this.extentGraphic.geometry=this.mainView.extent))}createMap(){const c=new P({basemap:this.basemap}),e=L.create({spatialReference:this.mainView.spatialReference,numLODs:this.scales.length,scales:this.scales});this.overview=new T({container:`${this.id}_cont`,map:c,scale:this.mainView.scale,center:this.mainView.center,spatialReference:this.mainView.spatialReference,constraints:{rotationEnabled:!1,lods:e.lods},ui:{components:[]}}),this.overview.when(()=>{const t=r=>{r.stopPropagation()};this.overview.on("mouse-wheel",t),this.overview.on("double-click",t),this.overview.on("double-click",["Control"],t),this.overview.on("drag",t),this.overview.on("drag",["Shift"],t),this.overview.on("drag",["Shift","Control"],t),this.overview.on("key-down",r=>{const i=["+","-","Shift","_","=","ArrowUp","ArrowDown","ArrowRight","ArrowLeft"],s=r.key;i.indexOf(s)!==-1&&r.stopPropagation()})})}createExtentGraphic(){const c={type:"simple-fill",color:[0,0,0,.5],outline:null};this.extentGraphic=new m({symbol:c}),this.overview.graphics.add(this.extentGraphic)}};I([B.property()],x.prototype,"expand",2),x=I([B.subclass("esri.widgets.Overview")],x);class b{static addOverview(e,t,r,i,s){const a=new x({basemap:e,mainView:t,scales:r,factor:i}),o=new w({expandIconClass:"esri-icon-maps",view:t,content:a,expanded:s==="expanded",mode:"floating",autoCollapse:!1,group:"api"});a.expand=o,t.ui.add(o,{position:"bottom-right"})}static addLayerList(e,t){const r=new te({view:e}),i=new w({expandIconClass:"esri-icon-layers",view:e,content:r,expanded:t==="expanded",mode:"floating",autoCollapse:!1,group:"api"});e.ui.add(i,{position:"top-right"})}static addBasemapGallery(e,t){const r=new H({source:new X({basemaps:e}),view:t});r.viewModel.basemapEquals=(s,a)=>s.id===a.id;const i=new w({expandIconClass:"esri-icon-basemap",view:t,content:r,mode:"floating",autoCollapse:!0,group:"api"});t.ui.add(i,{position:"top-right"})}static addCoordinates(e,t){const r=new Y({view:e});r.visibleElements={expandButton:!1},r.when(()=>{const s=setInterval(()=>{const p=document.getElementsByClassName("esri-coordinate-conversion")[0];p&&(clearInterval(s),p.style.width="300px")},50),a=r.formats.find(p=>p.name==="basemap"),o=new ee({name:"mn95",coordinateSegments:a.coordinateSegments,spatialReference:a.spatialReference});r.formats=r.formats.filter(p=>p.name==="dd"),r.formats.add(o,0),r.conversions.removeAll();const l=new Z({format:o});r.conversions.add(l)});const i=new w({expandIconClass:"esri-icon-locate",view:e,content:r,expanded:t==="expanded",mode:"floating",autoCollapse:!1,group:"api"});e.ui.add(i,{position:"bottom-right"})}}class ge{constructor(e){this.config=e,this.layerUtils=new he(e)}init(e){const t=this.layerUtils.getBasemaps(this.config.basemaps),r=new P({basemap:t[0]}),i=new C({wkid:this.config.spatialReference}),s=new u({x:this.config.center[0],y:this.config.center[1],spatialReference:i}),a=L.create({spatialReference:i,numLODs:this.config.scales.length,scales:this.config.scales}),o=new g({xmin:this.config.globalExtent.xmin,ymin:this.config.globalExtent.ymin,xmax:this.config.globalExtent.xmax,ymax:this.config.globalExtent.ymax,spatialReference:i});this.view=new T({container:this.config.container,map:r,scale:this.config.scale,center:s,spatialReference:i,constraints:{rotationEnabled:!1,lods:a.lods,minScale:this.config.minScale,maxScale:this.config.maxScale,geometry:o},popup:{dockEnabled:!0,dockOptions:{buttonEnabled:!1,breakpoint:!1},viewModel:{includeDefaultActions:!1}}}),this.view.when(()=>{e.emit("map-created")});const l=new k({view:this.view,unit:"metric"});if(this.view.ui.add(l,{position:"bottom-left"}),this.config.layers&&this.layerUtils.getMapImageLayers(this.config.layers).then(p=>{this.view.map.addMany(p.reverse())}),t.length>1&&b.addBasemapGallery(t,this.view),this.config.layerList&&b.addLayerList(this.view,this.config.layerList),this.config.overviewDisplay&&this.config.overviewBasemap){const p=this.layerUtils.getBasemaps([this.config.overviewBasemap])[0];b.addOverview(p,this.view,this.config.scales,this.config.overviewFactor,this.config.overviewDisplay)}this.config.showCoords&&b.addCoordinates(this.view,this.config.showCoords),this.view.on("click",p=>{p.native.ctrlKey&&(p.stopPropagation(),e.emit("ctrlClick",[p.mapPoint.x,p.mapPoint.y]))})}center(e,t){this.view.center=new u({x:e[0],y:e[1],spatialReference:this.view.spatialReference}),t!==void 0&&(this.view.scale=t)}centerOnObject(e,t,r){this.view.graphics.removeAll();const i=this.config.vectorLayerQueries.filter(s=>s.layer===e)[0];if(!i){console.warn(`Invalid layer name: ${e}`);return}this.layerUtils.queryLayer(i,t).then(s=>{if(!s.length){console.warn("No object found with this query.");return}const a=this.getGlobalExtent(s,1.5);if(this.view.extent=a,r){const o={point:this.config.selectionPointSymbol,multipoint:this.config.selectionPointSymbol,polyline:this.config.selectionPolylineSymbol,polygon:this.config.selectionPolygonSymbol};s.forEach(l=>{const p=new m({geometry:l,symbol:o[l.type]});this.view.graphics.add(p)})}})}getCenterCoordinates(){return[this.view.center.x,this.view.center.y]}showPopup(e,t){this.view.openPopup({title:e,content:t})}addMarker(e){const t=this.config.markerSymbol;e!==void 0&&e.icon&&e.size&&(t.url=e.icon,t.width=`${e.size[0]}px`,t.height=`${e.size[1]}px`);const r=e!==void 0&&e.position?e.position:this.getCenterCoordinates(),i=new u({x:r[0],y:r[1],spatialReference:this.view.spatialReference}),s=new m({geometry:i,symbol:t});this.view.graphics.add(s)}addGpxLayer(e,t,r){this.isValidLayerName(e)&&ce.gpxToFeatures(t,this.view.spatialReference).then(i=>{const s={point:this.config.gpxPointSymbol,polyline:this.config.gpxPolylineSymbol,polygon:this.config.gpxPolygonSymbol},a=[];i.tracks.forEach(o=>{o.symbol=s[o.geometry.type],a.push(o)}),i.waypoints.forEach(o=>{o.symbol=s[o.geometry.type],a.push(o)}),this.addGraphicsLayer(a,e,r)})}addTextLayer(e,t,r){this.isValidLayerName(e)&&ue.txtToFeatures(t,this.view.spatialReference).then(i=>{this.addGraphicsLayer(i,e,r)})}getGlobalExtent(e,t){const r=s=>{const a=s.extent;if(a&&a.width&&a.height)return a.expand(t);const o=s.type==="point"?[s.x,s.y]:s.points[0],l=50;return new g({xmin:o[0]-l,ymin:o[1]-l,xmax:o[0]+l,ymax:o[1]+l,spatialReference:this.view.spatialReference})};let i;return e.forEach(s=>{i?i.union(r(s)):i=r(s.clone())}),i.expand(t)}isValidLayerName(e){return this.view.map.layers.some(t=>t.title===e)?(console.warn(`Map already contains a layer called '${e}'.`),!1):!0}addGraphicsLayer(e,t,r){const i=new O({title:t});if(this.view.map.add(i),i.graphics.addMany(e),r){const s=e.map(o=>o.geometry),a=this.getGlobalExtent(s,1.5);this.view.extent=a}}}class me{static getConfig(e){return new Promise((t,r)=>{f(e.configUrl,{responseType:"json"}).then(i=>{const s=i.data;let a,o,l;if(e.miniMap!==void 0){l=e.miniMap;const y=this.getBasemap(s.basemaps,s.overviewBasemap);y&&(a=y),o=s.overviewFactor}let p;e.layerList!==void 0&&e.layers&&e.layers.length&&(p=e.layerList);let h=s.vectorServiceUrl;h.substring(h.length-1)==="/"&&(h=h.substring(0,h.length-1)),t({apiUrl:s.apiUrl,basemaps:this.getBasemaps(s,e),center:e.center||s.center,container:e.container,globalExtent:s.globalExtent,gpxPointSymbol:s.gpxPointSymbol,gpxPolylineSymbol:s.gpxPolylineSymbol,gpxPolygonSymbol:s.gpxPolygonSymbol,layers:e.layers,layerList:p,markerSymbol:s.markerSymbol,maxScale:s.maxScale,minScale:s.minScale,overviewBasemap:a,overviewDisplay:l,overviewFactor:o,scale:e.scale||s.scale,scales:s.scales,selectionPointSymbol:s.selectionPointSymbol,selectionPolylineSymbol:s.selectionPolylineSymbol,selectionPolygonSymbol:s.selectionPolygonSymbol,spatialReference:s.spatialReference,showCoords:e.showCoords,vectorLayerQueries:s.vectorLayerQueries,vectorServiceUrl:h,vectorServiceToken:s.vectorServiceToken})}).catch(i=>{r(i)})})}static getBasemaps(e,t){const r=[];if(t.basemaps===void 0){const i=this.getBasemap(e.basemaps,e.defaultBasemap,e.copyright);i&&r.push(i)}else t.basemaps.forEach(i=>{const s=this.getBasemap(e.basemaps,i,e.copyright);s&&r.push(s)});return r}static getBasemap(e,t,r){const i=e[t];return i?{alias:i.alias,copyright:r,layerId:i.layerId,name:t,thumbnailUrl:i.thumbnailUrl,type:i.type,url:i.url,urlTemplate:i.urlTemplate}:(console.warn(`Invalid basemap name: ${t}`),null)}}class fe{constructor(e){this.emitter=ne(),me.getConfig(e).then(t=>{let r=t.apiUrl;r.charAt(r.length-1)!=="/"&&(r+="/"),n.assetsPath=`${r}@arcgis/core/assets`;const i=document.createElement("link");i.setAttribute("rel","stylesheet"),i.setAttribute("type","text/css"),i.setAttribute("href",`${r}@arcgis/core/assets/esri/themes/light/main.css`),document.getElementsByTagName("head")[0].appendChild(i),this.map=new ge(t),this.map.init(this.emitter)}).catch(t=>{console.error(t)})}on(e,t){return this.emitter.on(e,t)}center(e,t){this.callMapFunction(()=>this.map.center(e,t))}centerOnObject(e,t,r){this.callMapFunction(()=>this.map.centerOnObject(e,t,r))}addGpxLayer(e,t,r){this.callMapFunction(()=>this.map.addGpxLayer(e,t,r))}addTextLayer(e,t,r){this.callMapFunction(()=>this.map.addTextLayer(e,t,r))}addMarker(e){this.callMapFunction(()=>this.map.addMarker(e))}showPopup(e,t){this.map.showPopup(e,t)}callMapFunction(e){this.map?e():this.emitter.on("map-created",()=>e())}}return fe});
//# sourceMappingURL=main.js.map
