(function(n,g){typeof exports=="object"&&typeof module!="undefined"?module.exports=g(require("esri/config"),require("esri/geometry/Extent"),require("esri/geometry/Point"),require("esri/geometry/SpatialReference"),require("esri/Graphic"),require("esri/layers/GraphicsLayer"),require("esri/layers/support/TileInfo"),require("esri/Map"),require("esri/views/MapView"),require("esri/widgets/ScaleBar"),require("esri/geometry/Polyline"),require("esri/geometry/projection"),require("esri/request"),require("esri/Basemap"),require("esri/identity/IdentityManager"),require("esri/layers/FeatureLayer"),require("esri/layers/ImageryLayer"),require("esri/layers/TileLayer"),require("esri/layers/VectorTileLayer"),require("esri/layers/WMTSLayer"),require("esri/rest/query"),require("esri/symbols/PictureMarkerSymbol"),require("esri/widgets/BasemapGallery"),require("esri/widgets/BasemapGallery/support/LocalBasemapsSource"),require("esri/widgets/CoordinateConversion"),require("esri/widgets/CoordinateConversion/support/Conversion"),require("esri/widgets/CoordinateConversion/support/Format"),require("esri/widgets/Expand"),require("esri/widgets/LayerList"),require("esri/core/accessorSupport/decorators"),require("esri/core/watchUtils"),require("esri/widgets/support/widget"),require("esri/widgets/Widget")):typeof define=="function"&&define.amd?define(["esri/config","esri/geometry/Extent","esri/geometry/Point","esri/geometry/SpatialReference","esri/Graphic","esri/layers/GraphicsLayer","esri/layers/support/TileInfo","esri/Map","esri/views/MapView","esri/widgets/ScaleBar","esri/geometry/Polyline","esri/geometry/projection","esri/request","esri/Basemap","esri/identity/IdentityManager","esri/layers/FeatureLayer","esri/layers/ImageryLayer","esri/layers/TileLayer","esri/layers/VectorTileLayer","esri/layers/WMTSLayer","esri/rest/query","esri/symbols/PictureMarkerSymbol","esri/widgets/BasemapGallery","esri/widgets/BasemapGallery/support/LocalBasemapsSource","esri/widgets/CoordinateConversion","esri/widgets/CoordinateConversion/support/Conversion","esri/widgets/CoordinateConversion/support/Format","esri/widgets/Expand","esri/widgets/LayerList","esri/core/accessorSupport/decorators","esri/core/watchUtils","esri/widgets/support/widget","esri/widgets/Widget"],g):(n=typeof globalThis!="undefined"?globalThis:n||self,n.mapcontrol=g(n["esri/config"],n.esriExtent,n.esriPoint,n.esriSpatialReference,n.esriGraphic,n.esriGraphicsLayer,n.esriTileInfo,n.esriMap,n.esriMapView,n.esriScaleBar,n.esriPolyline,n.esriprojection,n.esriRequest,n.esriBasemap,n.esriId,n.esriFeatureLayer,n.esriImageryLayer,n.esriTileLayer,n.esriVectorTileLayer,n.esriWMTSLayer,n.esriquery,n.esriPictureMarkerSymbol,n.esriBasemapGallery,n.esriLocalBasemapsSource,n.esriCoordinateConversion,n.esriConversion,n.esriFormat,n.esriExpand,n.esriLayerList,n.esridecorators,n.esriwatchUtils,n.esriwidget,n.esriWidget))})(this,function(n,g,U,k,I,R,F,O,V,$,j,D,A,N,W,z,K,Q,J,H,X,Y,Z,ee,te,ie,re,se,ae,S,oe,ne,ce){"use strict";function d(c){return c&&typeof c=="object"&&"default"in c?c:{default:c}}function _(c){if(c&&c.__esModule)return c;var e={__proto__:null,[Symbol.toStringTag]:"Module"};return c&&Object.keys(c).forEach(function(t){if(t!=="default"){var i=Object.getOwnPropertyDescriptor(c,t);Object.defineProperty(e,t,i.get?i:{enumerable:!0,get:function(){return c[t]}})}}),e.default=c,Object.freeze(e)}var le=d(n),P=d(g),f=d(U),pe=d(k),m=d(I),de=d(R),C=d(F),q=d(O),E=d(V),ue=d($),T=d(j),B=_(D),v=d(A),he=d(N),ye=d(W),fe=d(z),ge=d(K),me=d(Q),ve=d(J),we=d(H),xe=_(X),be=d(Y),Le=d(Z),Se=d(ee),_e=d(te),Pe=d(ie),Ce=d(re),w=d(se),qe=d(ae),Ee=d(ce);let Te=()=>({events:{},emit(c,...e){(this.events[c]||[]).forEach(t=>t(...e))},on(c,e){return(this.events[c]=this.events[c]||[]).push(e),()=>this.events[c]=(this.events[c]||[]).filter(t=>t!==e)}});class Be{static gpxToFeatures(e,t){return new Promise(i=>{v.default(e,{responseType:"xml"}).then(s=>{const r=s.data;B.load().then(()=>{const a={waypoints:[],tracks:[]};r.querySelectorAll("wpt").forEach((o,l)=>{const p=new f.default({latitude:o.attributes.lat.value,longitude:o.attributes.lon.value}),u=this.getGraphic(p,o,`waypoint ${l+1}`,t);a.waypoints.push(u)}),r.querySelectorAll("trk").forEach((o,l)=>{const p=new T.default({paths:[],spatialReference:{wkid:4326}});o.querySelectorAll("trkseg").forEach(h=>{const y=[];h.querySelectorAll("trkpt").forEach(G=>{const Oe=new f.default({latitude:G.attributes.lat.value,longitude:G.attributes.lon.value});y.push(Oe)}),p.addPath(y)});const u=this.getGraphic(p,o,`track ${l+1}`,t);a.tracks.push(u)}),r.querySelectorAll("rte").forEach((o,l)=>{const p=new T.default({paths:[],spatialReference:{wkid:4326}}),u=[];o.querySelectorAll("rtept").forEach(y=>{const L=new f.default({latitude:y.attributes.lat.value,longitude:y.attributes.lon.value});u.push(L)}),p.addPath(u);const h=this.getGraphic(p,o,`route ${l+1}`,t);a.tracks.push(h)}),i(a)})})})}static getGraphic(e,t,i,s){const r=t.querySelector("name");let a=i;r&&(a=r.textContent);const o=t.querySelector("desc");let l="";o&&(l=o.textContent);const p={title:a,content:l};return new m.default({geometry:B.project(e,s),popupTemplate:p})}}class Me{constructor(e,t){this.serviceUrl=e,this.serviceDescription=null,ye.default.registerToken({token:t,server:`${e.split("/rest/services")[0]}/rest/services`})}getFeatureLayers(e){return new Promise(t=>{this.getServiceDescription().then(i=>{const s=[];i.layers.forEach(r=>{if(e.includes(r.name)){const a=new fe.default({url:`${this.serviceUrl}/${r.id}`,title:r.name});a.on("layerview-create",o=>{const l=o.layerView.layer;l.popupTemplate=l.createPopupTemplate()}),s.push(a)}}),t(s)})})}queryLayer(e,t){return new Promise(i=>{this.getServiceDescription().then(s=>{const r=s.layers.filter(a=>a.name===e.layer)[0];if(!r){console.warn(`Invalid layer name in config file: ${e.layer}`),i([]);return}xe.executeQueryJSON(`${this.serviceUrl}/${r.id}`,{where:`${e.field} in ('${t.join("','")}')`,returnGeometry:!0}).then(a=>{i(a.features.map(o=>o.geometry))})})})}getBasemaps(e){const t=[];return e.forEach(i=>{const s=this.getLayer(i);s&&t.push(new he.default({baseLayers:[s],title:i.alias,thumbnailUrl:i.thumbnailUrl}))}),t}getServiceDescription(){return new Promise(e=>{this.serviceDescription===null?v.default(this.serviceUrl,{query:{f:"json"},responseType:"json"}).then(t=>{this.serviceDescription=t.data,e(this.serviceDescription)}):e(this.serviceDescription)})}getLayer(e){switch(e.type){case"wmts":return new we.default({url:e.url,activeLayer:{id:e.layerId},copyright:e.copyright});case"mapservice":return new me.default({url:e.url,copyright:e.copyright});case"imageservice":return new ge.default({url:e.url,copyright:e.copyright});case"vectortile":return new ve.default({url:e.url});default:return console.warn(`Unsupported basemap type: ${e.type}`),null}}}class Ge{static txtToFeatures(e,t){return new Promise(i=>{v.default(e,{responseType:"text"}).then(s=>{const r=[];s.data.split(`
`).forEach((a,o)=>{if(o){const l=a.split("	");if(l.length>=5){const p=l[0].split(","),u=new f.default({x:parseFloat(p[1]),y:parseFloat(p[0]),spatialReference:t}),h={title:l[1],content:l[2]},y=l[4].split(","),L=new be.default({url:l[3],width:`${y[0]}px`,height:`${y[1]}px`});r.push(new m.default({geometry:u,symbol:L,popupTemplate:h}))}}}),i(r)})})}}var Ue=Object.defineProperty,ke=Object.getOwnPropertyDescriptor,M=(c,e,t,i)=>{for(var s=i>1?void 0:i?ke(e,t):e,r=c.length-1,a;r>=0;r--)(a=c[r])&&(s=(i?a(e,t,s):a(s))||s);return i&&s&&Ue(e,t,s),s};let x=class extends Ee.default{constructor(c){super(c)}postInitialize(){oe.init(this.mainView,"center, interacting, scale",()=>{this.onViewChange()})}render(){return setTimeout(()=>{this.expand.expanded&&this.onViewChange()},10),ne.tsx("div",{id:`${this.id}_cont`,style:"width:250px;height:150px;background:#fff"})}onViewChange(){this.expand.expanded&&(!this.overview&&document.getElementById(`${this.id}_cont`)&&(this.createMap(),this.createExtentGraphic()),this.overview&&(this.overview.center=this.mainView.center,this.overview.scale=this.mainView.scale*this.factor,this.extentGraphic.geometry=this.mainView.extent))}createMap(){const c=new q.default({basemap:this.basemap}),e=C.default.create({spatialReference:this.mainView.spatialReference,numLODs:this.scales.length,scales:this.scales});this.overview=new E.default({container:`${this.id}_cont`,map:c,scale:this.mainView.scale,center:this.mainView.center,spatialReference:this.mainView.spatialReference,constraints:{rotationEnabled:!1,lods:e.lods},ui:{components:[]}}),this.overview.when(()=>{const t=i=>{i.stopPropagation()};this.overview.on("mouse-wheel",t),this.overview.on("double-click",t),this.overview.on("double-click",["Control"],t),this.overview.on("drag",t),this.overview.on("drag",["Shift"],t),this.overview.on("drag",["Shift","Control"],t),this.overview.on("key-down",i=>{const s=["+","-","Shift","_","=","ArrowUp","ArrowDown","ArrowRight","ArrowLeft"],r=i.key;s.indexOf(r)!==-1&&i.stopPropagation()})})}createExtentGraphic(){const c={type:"simple-fill",color:[0,0,0,.5],outline:null};this.extentGraphic=new m.default({symbol:c}),this.overview.graphics.add(this.extentGraphic)}};M([S.property()],x.prototype,"expand",2),x=M([S.subclass("esri.widgets.Overview")],x);class b{static addOverview(e,t,i,s,r){const a=new x({basemap:e,mainView:t,scales:i,factor:s}),o=new w.default({expandIconClass:"esri-icon-maps",view:t,content:a,expanded:r==="expanded",mode:"floating",autoCollapse:!1,group:"api"});a.expand=o,t.ui.add(o,{position:"bottom-right"})}static addLayerList(e,t){const i=new qe.default({view:e}),s=new w.default({expandIconClass:"esri-icon-layers",view:e,content:i,expanded:t==="expanded",mode:"floating",autoCollapse:!1,group:"api"});e.ui.add(s,{position:"top-right"})}static addBasemapGallery(e,t){const i=new Le.default({source:new Se.default({basemaps:e}),view:t});i.viewModel.basemapEquals=(r,a)=>r.id===a.id;const s=new w.default({expandIconClass:"esri-icon-basemap",view:t,content:i,mode:"floating",autoCollapse:!0,group:"api"});t.ui.add(s,{position:"top-right"})}static addCoordinates(e,t){const i=new _e.default({view:e});i.visibleElements={expandButton:!1},i.when(()=>{const r=document.getElementsByClassName("esri-coordinate-conversion")[0];r.style.width="300px";const a=i.formats.find(p=>p.name==="basemap"),o=new Ce.default({name:"mn95",coordinateSegments:a.coordinateSegments,spatialReference:a.spatialReference});i.formats=i.formats.filter(p=>p.name==="dd"),i.formats.add(o,0),i.conversions.removeAll();const l=new Pe.default({format:o});i.conversions.add(l)});const s=new w.default({expandIconClass:"esri-icon-locate",view:e,content:i,expanded:t==="expanded",mode:"floating",autoCollapse:!1,group:"api"});e.ui.add(s,{position:"bottom-right"})}}class Ie{constructor(e){this.config=e,this.layerUtils=new Me(e.vectorServiceUrl,e.vectorServiceToken)}init(e){const t=this.layerUtils.getBasemaps(this.config.basemaps),i=new q.default({basemap:t[0]}),s=new pe.default({wkid:this.config.spatialReference}),r=new f.default({x:this.config.center[0],y:this.config.center[1],spatialReference:s}),a=C.default.create({spatialReference:s,numLODs:this.config.scales.length,scales:this.config.scales}),o=new P.default({xmin:this.config.globalExtent.xmin,ymin:this.config.globalExtent.ymin,xmax:this.config.globalExtent.xmax,ymax:this.config.globalExtent.ymax,spatialReference:s});this.view=new E.default({container:this.config.container,map:i,scale:this.config.scale,center:r,spatialReference:s,constraints:{rotationEnabled:!1,lods:a.lods,minScale:this.config.minScale,maxScale:this.config.maxScale,geometry:o},popup:{dockEnabled:!0,dockOptions:{buttonEnabled:!1,breakpoint:!1},viewModel:{includeDefaultActions:!1}}}),this.view.when(()=>e.emit("map-created"));const l=new ue.default({view:this.view,unit:"metric"});if(this.view.ui.add(l,{position:"bottom-left"}),this.config.layers&&this.layerUtils.getFeatureLayers(this.config.layers).then(p=>{this.view.map.addMany(p)}),t.length>1&&b.addBasemapGallery(t,this.view),this.config.layerList&&b.addLayerList(this.view,this.config.layerList),this.config.overviewDisplay&&this.config.overviewBasemap){const p=this.layerUtils.getBasemaps([this.config.overviewBasemap])[0];b.addOverview(p,this.view,this.config.scales,this.config.overviewFactor,this.config.overviewDisplay)}this.config.showCoords&&b.addCoordinates(this.view,this.config.showCoords),this.view.on("click",p=>{p.native.ctrlKey&&(p.stopPropagation(),e.emit("ctrlClick",[p.mapPoint.x,p.mapPoint.y]))})}center(e,t){this.view.center=new f.default({x:e[0],y:e[1],spatialReference:this.view.spatialReference}),t!==void 0&&(this.view.scale=t)}centerOnObject(e,t,i){this.view.graphics.removeAll();const s=this.config.vectorLayerQueries.filter(r=>r.layer===e)[0];if(!s){console.warn(`Invalid layer name: ${e}`);return}this.layerUtils.queryLayer(s,t).then(r=>{if(!r.length){console.warn("No object found with this query.");return}const a=this.getGlobalExtent(r,1.5);if(this.view.extent=a,i){const o={point:this.config.selectionPointSymbol,multipoint:this.config.selectionPointSymbol,polyline:this.config.selectionPolylineSymbol,polygon:this.config.selectionPolygonSymbol};r.forEach(l=>{const p=new m.default({geometry:l,symbol:o[l.type]});this.view.graphics.add(p)})}})}getCenterCoordinates(){return[this.view.center.x,this.view.center.y]}showPopup(e,t){this.view.popup.open({title:e,content:t}),this.view.popup.collapsed=!1}addMarker(e){const t=this.config.markerSymbol;e!==void 0&&e.icon&&e.size&&(t.url=e.icon,t.width=`${e.size[0]}px`,t.height=`${e.size[1]}px`);const i=e!==void 0&&e.position?e.position:this.getCenterCoordinates(),s=new f.default({x:i[0],y:i[1],spatialReference:this.view.spatialReference}),r=new m.default({geometry:s,symbol:t});this.view.graphics.add(r)}addGpxLayer(e,t,i){!this.isValidLayerName(e)||Be.gpxToFeatures(t,this.view.spatialReference).then(s=>{const r={point:this.config.gpxPointSymbol,polyline:this.config.gpxPolylineSymbol,polygon:this.config.gpxPolygonSymbol},a=[];s.tracks.forEach(o=>{o.symbol=r[o.geometry.type],a.push(o)}),s.waypoints.forEach(o=>{o.symbol=r[o.geometry.type],a.push(o)}),this.addGraphicsLayer(a,e,i)})}addTextLayer(e,t,i){!this.isValidLayerName(e)||Ge.txtToFeatures(t,this.view.spatialReference).then(s=>{this.addGraphicsLayer(s,e,i)})}getGlobalExtent(e,t){const i=r=>{const a=r.extent;if(a&&a.width&&a.height)return a.expand(t);const o=r.type==="point"?[r.x,r.y]:r.points[0],l=50;return new P.default({xmin:o[0]-l,ymin:o[1]-l,xmax:o[0]+l,ymax:o[1]+l,spatialReference:this.view.spatialReference})};let s;return e.forEach(r=>{s?s.union(i(r)):s=i(r.clone())}),s.expand(t)}isValidLayerName(e){return this.view.map.layers.some(t=>t.title===e)?(console.warn(`Map already contains a layer called '${e}'.`),!1):!0}addGraphicsLayer(e,t,i){const s=new de.default({title:t});if(this.view.map.add(s),s.graphics.addMany(e),i){const r=e.map(o=>o.geometry),a=this.getGlobalExtent(r,1.5);this.view.extent=a}}}class Re{static getConfig(e){return new Promise((t,i)=>{v.default(e.configUrl,{responseType:"json"}).then(s=>{const r=s.data;let a,o,l;if(e.miniMap!==void 0){l=e.miniMap;const h=this.getBasemap(r.basemaps,r.overviewBasemap);h&&(a=h),o=r.overviewFactor}let p;e.layerList!==void 0&&e.layers&&e.layers.length&&(p=e.layerList);let u=r.vectorServiceUrl;u.substring(u.length-1)==="/"&&(u=u.substring(0,u.length-1)),t({apiUrl:r.apiUrl,basemaps:this.getBasemaps(r,e),center:e.center||r.center,container:e.container,globalExtent:r.globalExtent,gpxPointSymbol:r.gpxPointSymbol,gpxPolylineSymbol:r.gpxPolylineSymbol,gpxPolygonSymbol:r.gpxPolygonSymbol,layers:e.layers,layerList:p,markerSymbol:r.markerSymbol,maxScale:r.maxScale,minScale:r.minScale,overviewBasemap:a,overviewDisplay:l,overviewFactor:o,scale:e.scale||r.scale,scales:r.scales,selectionPointSymbol:r.selectionPointSymbol,selectionPolylineSymbol:r.selectionPolylineSymbol,selectionPolygonSymbol:r.selectionPolygonSymbol,spatialReference:r.spatialReference,showCoords:e.showCoords,vectorLayerQueries:r.vectorLayerQueries,vectorServiceUrl:u,vectorServiceToken:r.vectorServiceToken})}).catch(s=>{i(s)})})}static getBasemaps(e,t){const i=[];if(t.basemaps===void 0){const s=this.getBasemap(e.basemaps,e.defaultBasemap,e.copyright);s&&i.push(s)}else t.basemaps.forEach(s=>{const r=this.getBasemap(e.basemaps,s,e.copyright);r&&i.push(r)});return i}static getBasemap(e,t,i){const s=e[t];return s?{alias:s.alias,copyright:i,layerId:s.layerId,name:t,thumbnailUrl:s.thumbnailUrl,type:s.type,url:s.url}:(console.warn(`Invalid basemap name: ${t}`),null)}}class Fe{constructor(e){this.emitter=Te(),Re.getConfig(e).then(t=>{let i=t.apiUrl;i.charAt(i.length-1)!=="/"&&(i+="/"),le.default.assetsPath=`${i}@arcgis/core/assets`;const s=document.createElement("link");s.setAttribute("rel","stylesheet"),s.setAttribute("type","text/css"),s.setAttribute("href",`${i}@arcgis/core/assets/esri/themes/light/main.css`),document.getElementsByTagName("head")[0].appendChild(s),this.map=new Ie(t),this.map.init(this.emitter)}).catch(t=>{console.error(t)})}on(e,t){return this.emitter.on(e,t)}center(e,t){this.callMapFunction(()=>this.map.center(e,t))}centerOnObject(e,t,i){this.callMapFunction(()=>this.map.centerOnObject(e,t,i))}addGpxLayer(e,t,i){this.callMapFunction(()=>this.map.addGpxLayer(e,t,i))}addTextLayer(e,t,i){this.callMapFunction(()=>this.map.addTextLayer(e,t,i))}addMarker(e){this.callMapFunction(()=>this.map.addMarker(e))}showPopup(e,t){this.map.showPopup(e,t)}callMapFunction(e){this.map?e():this.emitter.on("map-created",()=>e())}}return Fe});
//# sourceMappingURL=main.js.map
